// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: master_com.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Ttt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchID string `protobuf:"bytes,1,opt,name=batchID,proto3" json:"batchID,omitempty"`
}

func (x *Ttt) Reset() {
	*x = Ttt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ttt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ttt) ProtoMessage() {}

func (x *Ttt) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ttt.ProtoReflect.Descriptor instead.
func (*Ttt) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{0}
}

func (x *Ttt) GetBatchID() string {
	if x != nil {
		return x.BatchID
	}
	return ""
}

type BatchLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerIds []string `protobuf:"bytes,1,rep,name=worker_ids,json=workerIds,proto3" json:"worker_ids,omitempty"` // List of worker IDs for a batch
}

func (x *BatchLocation) Reset() {
	*x = BatchLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchLocation) ProtoMessage() {}

func (x *BatchLocation) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchLocation.ProtoReflect.Descriptor instead.
func (*BatchLocation) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{1}
}

func (x *BatchLocation) GetWorkerIds() []string {
	if x != nil {
		return x.WorkerIds
	}
	return nil
}

type MasterMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Batches        []string                  `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
	BatchLocations map[string]*BatchLocation `protobuf:"bytes,2,rep,name=batch_locations,json=batchLocations,proto3" json:"batch_locations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *MasterMetadataResponse) Reset() {
	*x = MasterMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterMetadataResponse) ProtoMessage() {}

func (x *MasterMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterMetadataResponse.ProtoReflect.Descriptor instead.
func (*MasterMetadataResponse) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{2}
}

func (x *MasterMetadataResponse) GetBatches() []string {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *MasterMetadataResponse) GetBatchLocations() map[string]*BatchLocation {
	if x != nil {
		return x.BatchLocations
	}
	return nil
}

type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{3}
}

func (x *Location) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type MasterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerIp   string `protobuf:"bytes,1,opt,name=worker_ip,json=workerIp,proto3" json:"worker_ip,omitempty"`
	WorkerPort int32  `protobuf:"varint,2,opt,name=worker_port,json=workerPort,proto3" json:"worker_port,omitempty"`
}

func (x *MasterResponse) Reset() {
	*x = MasterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterResponse) ProtoMessage() {}

func (x *MasterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterResponse.ProtoReflect.Descriptor instead.
func (*MasterResponse) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{4}
}

func (x *MasterResponse) GetWorkerIp() string {
	if x != nil {
		return x.WorkerIp
	}
	return ""
}

func (x *MasterResponse) GetWorkerPort() int32 {
	if x != nil {
		return x.WorkerPort
	}
	return 0
}

type ClientFileRequestToMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Hash     int32    `protobuf:"varint,2,opt,name=hash,proto3" json:"hash,omitempty"`
	Batches  []string `protobuf:"bytes,3,rep,name=batches,proto3" json:"batches,omitempty"`
	FileSize int64    `protobuf:"varint,4,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
}

func (x *ClientFileRequestToMaster) Reset() {
	*x = ClientFileRequestToMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientFileRequestToMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientFileRequestToMaster) ProtoMessage() {}

func (x *ClientFileRequestToMaster) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientFileRequestToMaster.ProtoReflect.Descriptor instead.
func (*ClientFileRequestToMaster) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{5}
}

func (x *ClientFileRequestToMaster) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ClientFileRequestToMaster) GetHash() int32 {
	if x != nil {
		return x.Hash
	}
	return 0
}

func (x *ClientFileRequestToMaster) GetBatches() []string {
	if x != nil {
		return x.Batches
	}
	return nil
}

func (x *ClientFileRequestToMaster) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

type ClientBatchRequestToMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId   string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	BatchSize string `protobuf:"bytes,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
}

func (x *ClientBatchRequestToMaster) Reset() {
	*x = ClientBatchRequestToMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientBatchRequestToMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientBatchRequestToMaster) ProtoMessage() {}

func (x *ClientBatchRequestToMaster) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientBatchRequestToMaster.ProtoReflect.Descriptor instead.
func (*ClientBatchRequestToMaster) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{6}
}

func (x *ClientBatchRequestToMaster) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ClientBatchRequestToMaster) GetBatchSize() string {
	if x != nil {
		return x.BatchSize
	}
	return ""
}

type WorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *WorkerResponse) Reset() {
	*x = WorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerResponse) ProtoMessage() {}

func (x *WorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerResponse.ProtoReflect.Descriptor instead.
func (*WorkerResponse) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{7}
}

func (x *WorkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MasterFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *MasterFileResponse) Reset() {
	*x = MasterFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterFileResponse) ProtoMessage() {}

func (x *MasterFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterFileResponse.ProtoReflect.Descriptor instead.
func (*MasterFileResponse) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{8}
}

func (x *MasterFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ClientRequestToWorker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchId string `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Data    []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ClientRequestToWorker) Reset() {
	*x = ClientRequestToWorker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRequestToWorker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequestToWorker) ProtoMessage() {}

func (x *ClientRequestToWorker) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequestToWorker.ProtoReflect.Descriptor instead.
func (*ClientRequestToWorker) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{9}
}

func (x *ClientRequestToWorker) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *ClientRequestToWorker) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WorkerBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BatchData []byte `protobuf:"bytes,1,opt,name=batch_data,json=batchData,proto3" json:"batch_data,omitempty"`
}

func (x *WorkerBatchResponse) Reset() {
	*x = WorkerBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_master_com_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerBatchResponse) ProtoMessage() {}

func (x *WorkerBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_master_com_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerBatchResponse.ProtoReflect.Descriptor instead.
func (*WorkerBatchResponse) Descriptor() ([]byte, []int) {
	return file_master_com_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerBatchResponse) GetBatchData() []byte {
	if x != nil {
		return x.BatchData
	}
	return nil
}

var File_master_com_proto protoreflect.FileDescriptor

var file_master_com_proto_rawDesc = []byte{
	0x0a, 0x10, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x22, 0x1f,
	0x0a, 0x03, 0x54, 0x74, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x44, 0x22,
	0x2e, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22,
	0xf1, 0x01, 0x0a, 0x16, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x12, 0x5f, 0x0a, 0x0f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x62, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5c, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x26, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0e, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x19,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22,
	0x56, 0x0a, 0x1a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x2e, 0x0a, 0x12, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x15, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x34, 0x0a, 0x13, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x32, 0x8a, 0x02, 0x0a, 0x0d, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x46,
	0x69, 0x6c, 0x65, 0x12, 0x25, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73,
	0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x6f, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66,
	0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x22, 0x2e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x99,
	0x01, 0x0a, 0x0d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x4a, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x21, 0x2e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x1a, 0x1a, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0f, 0x2e, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x54, 0x74, 0x74, 0x1a, 0x1f, 0x2e, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x66, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x7a, 0x76, 0x61, 0x6e, 0x6d,
	0x61, 0x72, 0x69, 0x6e, 0x6e, 0x2f, 0x72, 0x63, 0x73, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_master_com_proto_rawDescOnce sync.Once
	file_master_com_proto_rawDescData = file_master_com_proto_rawDesc
)

func file_master_com_proto_rawDescGZIP() []byte {
	file_master_com_proto_rawDescOnce.Do(func() {
		file_master_com_proto_rawDescData = protoimpl.X.CompressGZIP(file_master_com_proto_rawDescData)
	})
	return file_master_com_proto_rawDescData
}

var file_master_com_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_master_com_proto_goTypes = []any{
	(*Ttt)(nil),                        // 0: master_dfs.Ttt
	(*BatchLocation)(nil),              // 1: master_dfs.BatchLocation
	(*MasterMetadataResponse)(nil),     // 2: master_dfs.MasterMetadataResponse
	(*Location)(nil),                   // 3: master_dfs.Location
	(*MasterResponse)(nil),             // 4: master_dfs.MasterResponse
	(*ClientFileRequestToMaster)(nil),  // 5: master_dfs.ClientFileRequestToMaster
	(*ClientBatchRequestToMaster)(nil), // 6: master_dfs.ClientBatchRequestToMaster
	(*WorkerResponse)(nil),             // 7: master_dfs.WorkerResponse
	(*MasterFileResponse)(nil),         // 8: master_dfs.MasterFileResponse
	(*ClientRequestToWorker)(nil),      // 9: master_dfs.ClientRequestToWorker
	(*WorkerBatchResponse)(nil),        // 10: master_dfs.WorkerBatchResponse
	nil,                                // 11: master_dfs.MasterMetadataResponse.BatchLocationsEntry
}
var file_master_com_proto_depIdxs = []int32{
	11, // 0: master_dfs.MasterMetadataResponse.batch_locations:type_name -> master_dfs.MasterMetadataResponse.BatchLocationsEntry
	1,  // 1: master_dfs.MasterMetadataResponse.BatchLocationsEntry.value:type_name -> master_dfs.BatchLocation
	5,  // 2: master_dfs.MasterService.RegisterFile:input_type -> master_dfs.ClientFileRequestToMaster
	6,  // 3: master_dfs.MasterService.GetBatchDestination:input_type -> master_dfs.ClientBatchRequestToMaster
	3,  // 4: master_dfs.MasterService.GetMetadata:input_type -> master_dfs.Location
	9,  // 5: master_dfs.WorkerService.SendBatch:input_type -> master_dfs.ClientRequestToWorker
	0,  // 6: master_dfs.WorkerService.GetBatch:input_type -> master_dfs.Ttt
	8,  // 7: master_dfs.MasterService.RegisterFile:output_type -> master_dfs.MasterFileResponse
	4,  // 8: master_dfs.MasterService.GetBatchDestination:output_type -> master_dfs.MasterResponse
	2,  // 9: master_dfs.MasterService.GetMetadata:output_type -> master_dfs.MasterMetadataResponse
	7,  // 10: master_dfs.WorkerService.SendBatch:output_type -> master_dfs.WorkerResponse
	10, // 11: master_dfs.WorkerService.GetBatch:output_type -> master_dfs.WorkerBatchResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_master_com_proto_init() }
func file_master_com_proto_init() {
	if File_master_com_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_master_com_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Ttt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BatchLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*MasterMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*MasterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ClientFileRequestToMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ClientBatchRequestToMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*MasterFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ClientRequestToWorker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_master_com_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*WorkerBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_master_com_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_master_com_proto_goTypes,
		DependencyIndexes: file_master_com_proto_depIdxs,
		MessageInfos:      file_master_com_proto_msgTypes,
	}.Build()
	File_master_com_proto = out.File
	file_master_com_proto_rawDesc = nil
	file_master_com_proto_goTypes = nil
	file_master_com_proto_depIdxs = nil
}
